data_cfg:
  name: SceneFlow
  root: data/SceneFlow
  train_list: datasets/SceneFlow/sceneflow_finalpass_train.txt
  val_list: datasets/SceneFlow/sceneflow_finalpass_test.txt
  test_list: datasets/SceneFlow/sceneflow_finalpass_test.txt
  num_workers: 8
  train_batch_size: 4
  val_batch_size: 1
  pin_memory: true
  shuffle: true

  batch_uniform: false
  #  random_type: choice
  #  h_range: [ 256, 288, 320, 352 ]
  #  w_range: [ 480, 512, 544, 576 ]

  transform:
    train:
      - type: RandomCrop
        size: [ 256, 512 ]
      #- type: RandomHorizontalFlip
      #  prob: 0.5
      - type: GetValidDisp
        max_disp: 256
      - type: TransposeImage
      - type: ToTensor
      - type: NormalizeImage
        mean: [ 0.485, 0.456, 0.406 ]
        std: [ 0.229, 0.224, 0.225 ]
    test:
      - type: TestCrop
        size: [ 512, 960 ]
      - type: GetValidDisp
        max_disp: 192
      - type: TransposeImage
      - type: ToTensor
      - type: NormalizeImage
        mean: [ 0.485, 0.456, 0.406 ]
        std: [ 0.229, 0.224, 0.225 ]


model_cfg:
  model: CFNet
  replace_mish: false # replace mish with relu in the first 10 epochs
  find_unused_parameters: true

  base_config:
    max_disp: 256


loss_cfg:
  - log_prefix: disp
    type: Weighted_Smooth_l1_Loss
    loss_term_weight: 1
    weights: [0.25, 0.35, 0.5, 0.5, 0.7, 1.0, 1.0, 1.4, 2]


trainer_cfg:
  save_name: SceneFlow
  total_epoch: 15
  restore_hint: 20
  optimizer_reset: true
  scheduler_reset: true
  warmup_reset: true
  log_iter: 50 # iter
  save_every: 1 # epoch
  val_every: 1 # epoch
  amp: false
  sync_bn: false
  fix_bn: false
  init_parameters: false

  optimizer_cfg:
    solver: RMSprop
    lr: 0.0001
#    betas: [ 0.9, 0.999 ]

  scheduler_cfg:
    scheduler: MultiStepLR
    gamma: 0.1
    milestones: [ 10 ]
    warmup:
      warmup_steps: 100

  evaluator_cfg:
    metric:
      - d1_all
      - epe
      - thres_1
      - thres_2
      - thres_3

#  clip_grad_cfg:
#    #    type: norm
#    #    max_norm: 35
#    #    norm_type: 2
#    type: value
#    clip_value: 0.1