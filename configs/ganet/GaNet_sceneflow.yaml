data_cfg:
  name: SceneFlow
  root: data/SceneFlow
  train_list: datasets/SceneFlow/sceneflow_cleanpass_train.txt
  val_list: datasets/SceneFlow/sceneflow_cleanpass_test.txt
  test_list: datasets/SceneFlow/sceneflow_cleanpass_test.txt
  num_workers: 4
  train_batch_size: 2
  val_batch_size: 1
  pin_memory: true
  shuffle: true

  batch_uniform: false
  #  random_type: range
  #  w_range: [ 0.5, 2.0 ]
  #  h_range: [ 0.5, 2.0 ]
  #  random_type: choice
  #  h_range: [ 256, 288, 320, 352 ]
  #  w_range: [ 480, 512, 544, 576 ]

  transform:
    train:
      - type: RandomCrop
        size: [ 240, 528 ]
      #- type: RandomHorizontalFlip
      #  prob: 0.5
      - type: GetValidDisp
        max_disp: 192
      - type: TransposeImage
      - type: ToTensor
      - type: NormalizeImage
        mean: [ 0.485, 0.456, 0.406 ]
        std: [ 0.229, 0.224, 0.225 ]
    test:
      - type: StereoPad
        size: [ 576, 960 ]
      - type: GetValidDisp
        max_disp: 192
      - type: TransposeImage
      - type: ToTensor
      - type: NormalizeImage
        mean: [ 0.485, 0.456, 0.406 ]
        std: [ 0.229, 0.224, 0.225 ]



model_cfg:
  model: GANet
  find_unused_parameters: true

  base_config:
    max_disp: 192


loss_cfg:
  is_kitti: false


trainer_cfg:
  save_name: PSMNet_SceneFlow
  total_epoch: 15
  restore_hint: 0
  log_iter: 50 # iter
  save_every: 1 # epoch
  val_every: 1 # epoch
  amp: false
  sync_bn: true
  fix_bn: false
  init_parameters: false
  optimizer_cfg:
    solver: Adam
    lr: 0.001
    betas: [ 0.9, 0.999 ]

  scheduler_cfg:
    scheduler: MultiStepLR
    gamma: 0.1
    milestones: [ 7, 12 ]
    warmup:
      warmup_steps: 500

  evaluator_cfg:
    metric:
      - d1_all
      - epe
      - thres_1
      - thres_2
      - thres_3

  clip_grad_cfg:
    type: norm
    max_norm: 35
    norm_type: 2